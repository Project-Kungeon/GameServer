// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Auction.proto

#include "Auction.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace auction {
PROTOBUF_CONSTEXPR C_PutItem::C_PutItem(
    ::_pbi::ConstantInitialized){}
struct C_PutItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_PutItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_PutItemDefaultTypeInternal() {}
  union {
    C_PutItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_PutItemDefaultTypeInternal _C_PutItem_default_instance_;
PROTOBUF_CONSTEXPR S_PutItem::S_PutItem(
    ::_pbi::ConstantInitialized){}
struct S_PutItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_PutItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_PutItemDefaultTypeInternal() {}
  union {
    S_PutItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_PutItemDefaultTypeInternal _S_PutItem_default_instance_;
PROTOBUF_CONSTEXPR C_GetOffItem::C_GetOffItem(
    ::_pbi::ConstantInitialized){}
struct C_GetOffItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_GetOffItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_GetOffItemDefaultTypeInternal() {}
  union {
    C_GetOffItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_GetOffItemDefaultTypeInternal _C_GetOffItem_default_instance_;
PROTOBUF_CONSTEXPR S_GetOffItem::S_GetOffItem(
    ::_pbi::ConstantInitialized){}
struct S_GetOffItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_GetOffItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_GetOffItemDefaultTypeInternal() {}
  union {
    S_GetOffItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_GetOffItemDefaultTypeInternal _S_GetOffItem_default_instance_;
PROTOBUF_CONSTEXPR C_PurchaseItem::C_PurchaseItem(
    ::_pbi::ConstantInitialized)
  : user_pk_(uint64_t{0u})
  , price_(uint64_t{0u})
  , quantity_(uint64_t{0u})
  , item_table_(0)
{}
struct C_PurchaseItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_PurchaseItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_PurchaseItemDefaultTypeInternal() {}
  union {
    C_PurchaseItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_PurchaseItemDefaultTypeInternal _C_PurchaseItem_default_instance_;
PROTOBUF_CONSTEXPR S_PurchaseItem::S_PurchaseItem(
    ::_pbi::ConstantInitialized)
  : is_success_(false)
  , item_table_(0)

  , price_(uint64_t{0u})
  , quantity_(uint64_t{0u}){}
struct S_PurchaseItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_PurchaseItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_PurchaseItemDefaultTypeInternal() {}
  union {
    S_PurchaseItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_PurchaseItemDefaultTypeInternal _S_PurchaseItem_default_instance_;
}  // namespace auction
static ::_pb::Metadata file_level_metadata_Auction_2eproto[6];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Auction_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Auction_2eproto = nullptr;

const uint32_t TableStruct_Auction_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::auction::C_PutItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::auction::S_PutItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::auction::C_GetOffItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::auction::S_GetOffItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::auction::C_PurchaseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::auction::C_PurchaseItem, user_pk_),
  PROTOBUF_FIELD_OFFSET(::auction::C_PurchaseItem, item_table_),
  PROTOBUF_FIELD_OFFSET(::auction::C_PurchaseItem, price_),
  PROTOBUF_FIELD_OFFSET(::auction::C_PurchaseItem, quantity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::auction::S_PurchaseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::auction::S_PurchaseItem, is_success_),
  PROTOBUF_FIELD_OFFSET(::auction::S_PurchaseItem, item_table_),
  PROTOBUF_FIELD_OFFSET(::auction::S_PurchaseItem, price_),
  PROTOBUF_FIELD_OFFSET(::auction::S_PurchaseItem, quantity_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::auction::C_PutItem)},
  { 6, -1, -1, sizeof(::auction::S_PutItem)},
  { 12, -1, -1, sizeof(::auction::C_GetOffItem)},
  { 18, -1, -1, sizeof(::auction::S_GetOffItem)},
  { 24, -1, -1, sizeof(::auction::C_PurchaseItem)},
  { 34, -1, -1, sizeof(::auction::S_PurchaseItem)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::auction::_C_PutItem_default_instance_._instance,
  &::auction::_S_PutItem_default_instance_._instance,
  &::auction::_C_GetOffItem_default_instance_._instance,
  &::auction::_S_GetOffItem_default_instance_._instance,
  &::auction::_C_PurchaseItem_default_instance_._instance,
  &::auction::_S_PurchaseItem_default_instance_._instance,
};

const char descriptor_table_protodef_Auction_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rAuction.proto\022\007auction\032\nEnum.proto\"\013\n\t"
  "C_PutItem\"\013\n\tS_PutItem\"\016\n\014C_GetOffItem\"\016"
  "\n\014S_GetOffItem\"j\n\016C_PurchaseItem\022\017\n\007user"
  "_pk\030\001 \001(\004\022&\n\nitem_table\030\002 \001(\0162\022.message."
  "ItemTable\022\r\n\005price\030\003 \001(\004\022\020\n\010quantity\030\004 \001"
  "(\004\"m\n\016S_PurchaseItem\022\022\n\nis_success\030\001 \001(\010"
  "\022&\n\nitem_table\030\002 \001(\0162\022.message.ItemTable"
  "\022\r\n\005price\030\003 \001(\004\022\020\n\010quantity\030\004 \001(\004b\006proto"
  "3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Auction_2eproto_deps[1] = {
  &::descriptor_table_Enum_2eproto,
};
static ::_pbi::once_flag descriptor_table_Auction_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Auction_2eproto = {
    false, false, 321, descriptor_table_protodef_Auction_2eproto,
    "Auction.proto",
    &descriptor_table_Auction_2eproto_once, descriptor_table_Auction_2eproto_deps, 1, 6,
    schemas, file_default_instances, TableStruct_Auction_2eproto::offsets,
    file_level_metadata_Auction_2eproto, file_level_enum_descriptors_Auction_2eproto,
    file_level_service_descriptors_Auction_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Auction_2eproto_getter() {
  return &descriptor_table_Auction_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Auction_2eproto(&descriptor_table_Auction_2eproto);
namespace auction {

// ===================================================================

class C_PutItem::_Internal {
 public:
};

C_PutItem::C_PutItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:auction.C_PutItem)
}
C_PutItem::C_PutItem(const C_PutItem& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:auction.C_PutItem)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_PutItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_PutItem::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C_PutItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Auction_2eproto_getter, &descriptor_table_Auction_2eproto_once,
      file_level_metadata_Auction_2eproto[0]);
}

// ===================================================================

class S_PutItem::_Internal {
 public:
};

S_PutItem::S_PutItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:auction.S_PutItem)
}
S_PutItem::S_PutItem(const S_PutItem& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:auction.S_PutItem)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_PutItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_PutItem::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata S_PutItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Auction_2eproto_getter, &descriptor_table_Auction_2eproto_once,
      file_level_metadata_Auction_2eproto[1]);
}

// ===================================================================

class C_GetOffItem::_Internal {
 public:
};

C_GetOffItem::C_GetOffItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:auction.C_GetOffItem)
}
C_GetOffItem::C_GetOffItem(const C_GetOffItem& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:auction.C_GetOffItem)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_GetOffItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_GetOffItem::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata C_GetOffItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Auction_2eproto_getter, &descriptor_table_Auction_2eproto_once,
      file_level_metadata_Auction_2eproto[2]);
}

// ===================================================================

class S_GetOffItem::_Internal {
 public:
};

S_GetOffItem::S_GetOffItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:auction.S_GetOffItem)
}
S_GetOffItem::S_GetOffItem(const S_GetOffItem& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:auction.S_GetOffItem)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_GetOffItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_GetOffItem::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata S_GetOffItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Auction_2eproto_getter, &descriptor_table_Auction_2eproto_once,
      file_level_metadata_Auction_2eproto[3]);
}

// ===================================================================

class C_PurchaseItem::_Internal {
 public:
};

C_PurchaseItem::C_PurchaseItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:auction.C_PurchaseItem)
}
C_PurchaseItem::C_PurchaseItem(const C_PurchaseItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&user_pk_, &from.user_pk_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_table_) -
    reinterpret_cast<char*>(&user_pk_)) + sizeof(item_table_));
  // @@protoc_insertion_point(copy_constructor:auction.C_PurchaseItem)
}

inline void C_PurchaseItem::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&user_pk_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&item_table_) -
    reinterpret_cast<char*>(&user_pk_)) + sizeof(item_table_));
}

C_PurchaseItem::~C_PurchaseItem() {
  // @@protoc_insertion_point(destructor:auction.C_PurchaseItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_PurchaseItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_PurchaseItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C_PurchaseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:auction.C_PurchaseItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&user_pk_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_table_) -
      reinterpret_cast<char*>(&user_pk_)) + sizeof(item_table_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_PurchaseItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 user_pk = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          user_pk_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .message.ItemTable item_table = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_item_table(static_cast<::message::ItemTable>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 price = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 quantity = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          quantity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_PurchaseItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:auction.C_PurchaseItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_pk = 1;
  if (this->_internal_user_pk() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_user_pk(), target);
  }

  // .message.ItemTable item_table = 2;
  if (this->_internal_item_table() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_item_table(), target);
  }

  // uint64 price = 3;
  if (this->_internal_price() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_price(), target);
  }

  // uint64 quantity = 4;
  if (this->_internal_quantity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_quantity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:auction.C_PurchaseItem)
  return target;
}

size_t C_PurchaseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:auction.C_PurchaseItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 user_pk = 1;
  if (this->_internal_user_pk() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_user_pk());
  }

  // uint64 price = 3;
  if (this->_internal_price() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_price());
  }

  // uint64 quantity = 4;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_quantity());
  }

  // .message.ItemTable item_table = 2;
  if (this->_internal_item_table() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_item_table());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_PurchaseItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    C_PurchaseItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_PurchaseItem::GetClassData() const { return &_class_data_; }

void C_PurchaseItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<C_PurchaseItem *>(to)->MergeFrom(
      static_cast<const C_PurchaseItem &>(from));
}


void C_PurchaseItem::MergeFrom(const C_PurchaseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:auction.C_PurchaseItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_user_pk() != 0) {
    _internal_set_user_pk(from._internal_user_pk());
  }
  if (from._internal_price() != 0) {
    _internal_set_price(from._internal_price());
  }
  if (from._internal_quantity() != 0) {
    _internal_set_quantity(from._internal_quantity());
  }
  if (from._internal_item_table() != 0) {
    _internal_set_item_table(from._internal_item_table());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_PurchaseItem::CopyFrom(const C_PurchaseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:auction.C_PurchaseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_PurchaseItem::IsInitialized() const {
  return true;
}

void C_PurchaseItem::InternalSwap(C_PurchaseItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_PurchaseItem, item_table_)
      + sizeof(C_PurchaseItem::item_table_)
      - PROTOBUF_FIELD_OFFSET(C_PurchaseItem, user_pk_)>(
          reinterpret_cast<char*>(&user_pk_),
          reinterpret_cast<char*>(&other->user_pk_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_PurchaseItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Auction_2eproto_getter, &descriptor_table_Auction_2eproto_once,
      file_level_metadata_Auction_2eproto[4]);
}

// ===================================================================

class S_PurchaseItem::_Internal {
 public:
};

S_PurchaseItem::S_PurchaseItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:auction.S_PurchaseItem)
}
S_PurchaseItem::S_PurchaseItem(const S_PurchaseItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&is_success_, &from.is_success_,
    static_cast<size_t>(reinterpret_cast<char*>(&quantity_) -
    reinterpret_cast<char*>(&is_success_)) + sizeof(quantity_));
  // @@protoc_insertion_point(copy_constructor:auction.S_PurchaseItem)
}

inline void S_PurchaseItem::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&is_success_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&quantity_) -
    reinterpret_cast<char*>(&is_success_)) + sizeof(quantity_));
}

S_PurchaseItem::~S_PurchaseItem() {
  // @@protoc_insertion_point(destructor:auction.S_PurchaseItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_PurchaseItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_PurchaseItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_PurchaseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:auction.S_PurchaseItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quantity_) -
      reinterpret_cast<char*>(&is_success_)) + sizeof(quantity_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_PurchaseItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          is_success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .message.ItemTable item_table = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_item_table(static_cast<::message::ItemTable>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 price = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          price_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 quantity = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          quantity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_PurchaseItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:auction.S_PurchaseItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->_internal_is_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_success(), target);
  }

  // .message.ItemTable item_table = 2;
  if (this->_internal_item_table() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_item_table(), target);
  }

  // uint64 price = 3;
  if (this->_internal_price() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_price(), target);
  }

  // uint64 quantity = 4;
  if (this->_internal_quantity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_quantity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:auction.S_PurchaseItem)
  return target;
}

size_t S_PurchaseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:auction.S_PurchaseItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->_internal_is_success() != 0) {
    total_size += 1 + 1;
  }

  // .message.ItemTable item_table = 2;
  if (this->_internal_item_table() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_item_table());
  }

  // uint64 price = 3;
  if (this->_internal_price() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_price());
  }

  // uint64 quantity = 4;
  if (this->_internal_quantity() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_quantity());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_PurchaseItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S_PurchaseItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_PurchaseItem::GetClassData() const { return &_class_data_; }

void S_PurchaseItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S_PurchaseItem *>(to)->MergeFrom(
      static_cast<const S_PurchaseItem &>(from));
}


void S_PurchaseItem::MergeFrom(const S_PurchaseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:auction.S_PurchaseItem)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_success() != 0) {
    _internal_set_is_success(from._internal_is_success());
  }
  if (from._internal_item_table() != 0) {
    _internal_set_item_table(from._internal_item_table());
  }
  if (from._internal_price() != 0) {
    _internal_set_price(from._internal_price());
  }
  if (from._internal_quantity() != 0) {
    _internal_set_quantity(from._internal_quantity());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_PurchaseItem::CopyFrom(const S_PurchaseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:auction.S_PurchaseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_PurchaseItem::IsInitialized() const {
  return true;
}

void S_PurchaseItem::InternalSwap(S_PurchaseItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S_PurchaseItem, quantity_)
      + sizeof(S_PurchaseItem::quantity_)
      - PROTOBUF_FIELD_OFFSET(S_PurchaseItem, is_success_)>(
          reinterpret_cast<char*>(&is_success_),
          reinterpret_cast<char*>(&other->is_success_));
}

::PROTOBUF_NAMESPACE_ID::Metadata S_PurchaseItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Auction_2eproto_getter, &descriptor_table_Auction_2eproto_once,
      file_level_metadata_Auction_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace auction
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::auction::C_PutItem*
Arena::CreateMaybeMessage< ::auction::C_PutItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::auction::C_PutItem >(arena);
}
template<> PROTOBUF_NOINLINE ::auction::S_PutItem*
Arena::CreateMaybeMessage< ::auction::S_PutItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::auction::S_PutItem >(arena);
}
template<> PROTOBUF_NOINLINE ::auction::C_GetOffItem*
Arena::CreateMaybeMessage< ::auction::C_GetOffItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::auction::C_GetOffItem >(arena);
}
template<> PROTOBUF_NOINLINE ::auction::S_GetOffItem*
Arena::CreateMaybeMessage< ::auction::S_GetOffItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::auction::S_GetOffItem >(arena);
}
template<> PROTOBUF_NOINLINE ::auction::C_PurchaseItem*
Arena::CreateMaybeMessage< ::auction::C_PurchaseItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::auction::C_PurchaseItem >(arena);
}
template<> PROTOBUF_NOINLINE ::auction::S_PurchaseItem*
Arena::CreateMaybeMessage< ::auction::S_PurchaseItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::auction::S_PurchaseItem >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
