// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Rampage.proto

#include "Rampage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace rampage {
PROTOBUF_CONSTEXPR S_Rampage_Spawn::S_Rampage_Spawn(
    ::_pbi::ConstantInitialized)
  : object_id_(uint64_t{0u}){}
struct S_Rampage_SpawnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_Rampage_SpawnDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_Rampage_SpawnDefaultTypeInternal() {}
  union {
    S_Rampage_Spawn _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_Rampage_SpawnDefaultTypeInternal _S_Rampage_Spawn_default_instance_;
PROTOBUF_CONSTEXPR S_Rampage_BasicAttack::S_Rampage_BasicAttack(
    ::_pbi::ConstantInitialized)
  : object_id_(uint64_t{0u}){}
struct S_Rampage_BasicAttackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_Rampage_BasicAttackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_Rampage_BasicAttackDefaultTypeInternal() {}
  union {
    S_Rampage_BasicAttack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_Rampage_BasicAttackDefaultTypeInternal _S_Rampage_BasicAttack_default_instance_;
PROTOBUF_CONSTEXPR C_Rampage_BasicAttackCheck::C_Rampage_BasicAttackCheck(
    ::_pbi::ConstantInitialized)
  : object_id_(uint64_t{0u})
  , target_id_(uint64_t{0u}){}
struct C_Rampage_BasicAttackCheckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C_Rampage_BasicAttackCheckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~C_Rampage_BasicAttackCheckDefaultTypeInternal() {}
  union {
    C_Rampage_BasicAttackCheck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C_Rampage_BasicAttackCheckDefaultTypeInternal _C_Rampage_BasicAttackCheck_default_instance_;
PROTOBUF_CONSTEXPR S_Rampage_Roar::S_Rampage_Roar(
    ::_pbi::ConstantInitialized)
  : object_id_(uint64_t{0u}){}
struct S_Rampage_RoarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_Rampage_RoarDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_Rampage_RoarDefaultTypeInternal() {}
  union {
    S_Rampage_Roar _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_Rampage_RoarDefaultTypeInternal _S_Rampage_Roar_default_instance_;
PROTOBUF_CONSTEXPR S_Rampage_EarthQuake::S_Rampage_EarthQuake(
    ::_pbi::ConstantInitialized)
  : object_id_(uint64_t{0u}){}
struct S_Rampage_EarthQuakeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_Rampage_EarthQuakeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_Rampage_EarthQuakeDefaultTypeInternal() {}
  union {
    S_Rampage_EarthQuake _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_Rampage_EarthQuakeDefaultTypeInternal _S_Rampage_EarthQuake_default_instance_;
PROTOBUF_CONSTEXPR S_Rampage_EnhanceAttack::S_Rampage_EnhanceAttack(
    ::_pbi::ConstantInitialized)
  : object_id_(uint64_t{0u}){}
struct S_Rampage_EnhanceAttackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_Rampage_EnhanceAttackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_Rampage_EnhanceAttackDefaultTypeInternal() {}
  union {
    S_Rampage_EnhanceAttack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_Rampage_EnhanceAttackDefaultTypeInternal _S_Rampage_EnhanceAttack_default_instance_;
PROTOBUF_CONSTEXPR S_Rampage_ThrowAttack::S_Rampage_ThrowAttack(
    ::_pbi::ConstantInitialized)
  : object_id_(uint64_t{0u}){}
struct S_Rampage_ThrowAttackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S_Rampage_ThrowAttackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~S_Rampage_ThrowAttackDefaultTypeInternal() {}
  union {
    S_Rampage_ThrowAttack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S_Rampage_ThrowAttackDefaultTypeInternal _S_Rampage_ThrowAttack_default_instance_;
}  // namespace rampage
static ::_pb::Metadata file_level_metadata_Rampage_2eproto[7];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Rampage_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Rampage_2eproto = nullptr;

const uint32_t TableStruct_Rampage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rampage::S_Rampage_Spawn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rampage::S_Rampage_Spawn, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rampage::S_Rampage_BasicAttack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rampage::S_Rampage_BasicAttack, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rampage::C_Rampage_BasicAttackCheck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rampage::C_Rampage_BasicAttackCheck, object_id_),
  PROTOBUF_FIELD_OFFSET(::rampage::C_Rampage_BasicAttackCheck, target_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rampage::S_Rampage_Roar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rampage::S_Rampage_Roar, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rampage::S_Rampage_EarthQuake, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rampage::S_Rampage_EarthQuake, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rampage::S_Rampage_EnhanceAttack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rampage::S_Rampage_EnhanceAttack, object_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rampage::S_Rampage_ThrowAttack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::rampage::S_Rampage_ThrowAttack, object_id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::rampage::S_Rampage_Spawn)},
  { 7, -1, -1, sizeof(::rampage::S_Rampage_BasicAttack)},
  { 14, -1, -1, sizeof(::rampage::C_Rampage_BasicAttackCheck)},
  { 22, -1, -1, sizeof(::rampage::S_Rampage_Roar)},
  { 29, -1, -1, sizeof(::rampage::S_Rampage_EarthQuake)},
  { 36, -1, -1, sizeof(::rampage::S_Rampage_EnhanceAttack)},
  { 43, -1, -1, sizeof(::rampage::S_Rampage_ThrowAttack)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::rampage::_S_Rampage_Spawn_default_instance_._instance,
  &::rampage::_S_Rampage_BasicAttack_default_instance_._instance,
  &::rampage::_C_Rampage_BasicAttackCheck_default_instance_._instance,
  &::rampage::_S_Rampage_Roar_default_instance_._instance,
  &::rampage::_S_Rampage_EarthQuake_default_instance_._instance,
  &::rampage::_S_Rampage_EnhanceAttack_default_instance_._instance,
  &::rampage::_S_Rampage_ThrowAttack_default_instance_._instance,
};

const char descriptor_table_protodef_Rampage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rRampage.proto\022\007rampage\"$\n\017S_Rampage_Sp"
  "awn\022\021\n\tobject_id\030\001 \001(\004\"*\n\025S_Rampage_Basi"
  "cAttack\022\021\n\tobject_id\030\001 \001(\004\"B\n\032C_Rampage_"
  "BasicAttackCheck\022\021\n\tobject_id\030\001 \001(\004\022\021\n\tt"
  "arget_id\030\002 \001(\004\"#\n\016S_Rampage_Roar\022\021\n\tobje"
  "ct_id\030\001 \001(\004\")\n\024S_Rampage_EarthQuake\022\021\n\to"
  "bject_id\030\001 \001(\004\",\n\027S_Rampage_EnhanceAttac"
  "k\022\021\n\tobject_id\030\001 \001(\004\"*\n\025S_Rampage_ThrowA"
  "ttack\022\021\n\tobject_id\030\001 \001(\004b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_Rampage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Rampage_2eproto = {
    false, false, 352, descriptor_table_protodef_Rampage_2eproto,
    "Rampage.proto",
    &descriptor_table_Rampage_2eproto_once, nullptr, 0, 7,
    schemas, file_default_instances, TableStruct_Rampage_2eproto::offsets,
    file_level_metadata_Rampage_2eproto, file_level_enum_descriptors_Rampage_2eproto,
    file_level_service_descriptors_Rampage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Rampage_2eproto_getter() {
  return &descriptor_table_Rampage_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Rampage_2eproto(&descriptor_table_Rampage_2eproto);
namespace rampage {

// ===================================================================

class S_Rampage_Spawn::_Internal {
 public:
};

S_Rampage_Spawn::S_Rampage_Spawn(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rampage.S_Rampage_Spawn)
}
S_Rampage_Spawn::S_Rampage_Spawn(const S_Rampage_Spawn& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  object_id_ = from.object_id_;
  // @@protoc_insertion_point(copy_constructor:rampage.S_Rampage_Spawn)
}

inline void S_Rampage_Spawn::SharedCtor() {
object_id_ = uint64_t{0u};
}

S_Rampage_Spawn::~S_Rampage_Spawn() {
  // @@protoc_insertion_point(destructor:rampage.S_Rampage_Spawn)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_Rampage_Spawn::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_Rampage_Spawn::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_Rampage_Spawn::Clear() {
// @@protoc_insertion_point(message_clear_start:rampage.S_Rampage_Spawn)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_Rampage_Spawn::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_Rampage_Spawn::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rampage.S_Rampage_Spawn)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_object_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rampage.S_Rampage_Spawn)
  return target;
}

size_t S_Rampage_Spawn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rampage.S_Rampage_Spawn)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_object_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_Rampage_Spawn::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S_Rampage_Spawn::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_Rampage_Spawn::GetClassData() const { return &_class_data_; }

void S_Rampage_Spawn::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S_Rampage_Spawn *>(to)->MergeFrom(
      static_cast<const S_Rampage_Spawn &>(from));
}


void S_Rampage_Spawn::MergeFrom(const S_Rampage_Spawn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rampage.S_Rampage_Spawn)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_Rampage_Spawn::CopyFrom(const S_Rampage_Spawn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rampage.S_Rampage_Spawn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_Rampage_Spawn::IsInitialized() const {
  return true;
}

void S_Rampage_Spawn::InternalSwap(S_Rampage_Spawn* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(object_id_, other->object_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_Rampage_Spawn::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Rampage_2eproto_getter, &descriptor_table_Rampage_2eproto_once,
      file_level_metadata_Rampage_2eproto[0]);
}

// ===================================================================

class S_Rampage_BasicAttack::_Internal {
 public:
};

S_Rampage_BasicAttack::S_Rampage_BasicAttack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rampage.S_Rampage_BasicAttack)
}
S_Rampage_BasicAttack::S_Rampage_BasicAttack(const S_Rampage_BasicAttack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  object_id_ = from.object_id_;
  // @@protoc_insertion_point(copy_constructor:rampage.S_Rampage_BasicAttack)
}

inline void S_Rampage_BasicAttack::SharedCtor() {
object_id_ = uint64_t{0u};
}

S_Rampage_BasicAttack::~S_Rampage_BasicAttack() {
  // @@protoc_insertion_point(destructor:rampage.S_Rampage_BasicAttack)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_Rampage_BasicAttack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_Rampage_BasicAttack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_Rampage_BasicAttack::Clear() {
// @@protoc_insertion_point(message_clear_start:rampage.S_Rampage_BasicAttack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_Rampage_BasicAttack::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_Rampage_BasicAttack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rampage.S_Rampage_BasicAttack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_object_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rampage.S_Rampage_BasicAttack)
  return target;
}

size_t S_Rampage_BasicAttack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rampage.S_Rampage_BasicAttack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_object_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_Rampage_BasicAttack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S_Rampage_BasicAttack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_Rampage_BasicAttack::GetClassData() const { return &_class_data_; }

void S_Rampage_BasicAttack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S_Rampage_BasicAttack *>(to)->MergeFrom(
      static_cast<const S_Rampage_BasicAttack &>(from));
}


void S_Rampage_BasicAttack::MergeFrom(const S_Rampage_BasicAttack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rampage.S_Rampage_BasicAttack)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_Rampage_BasicAttack::CopyFrom(const S_Rampage_BasicAttack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rampage.S_Rampage_BasicAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_Rampage_BasicAttack::IsInitialized() const {
  return true;
}

void S_Rampage_BasicAttack::InternalSwap(S_Rampage_BasicAttack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(object_id_, other->object_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_Rampage_BasicAttack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Rampage_2eproto_getter, &descriptor_table_Rampage_2eproto_once,
      file_level_metadata_Rampage_2eproto[1]);
}

// ===================================================================

class C_Rampage_BasicAttackCheck::_Internal {
 public:
};

C_Rampage_BasicAttackCheck::C_Rampage_BasicAttackCheck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rampage.C_Rampage_BasicAttackCheck)
}
C_Rampage_BasicAttackCheck::C_Rampage_BasicAttackCheck(const C_Rampage_BasicAttackCheck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&object_id_, &from.object_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_id_) -
    reinterpret_cast<char*>(&object_id_)) + sizeof(target_id_));
  // @@protoc_insertion_point(copy_constructor:rampage.C_Rampage_BasicAttackCheck)
}

inline void C_Rampage_BasicAttackCheck::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&object_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&target_id_) -
    reinterpret_cast<char*>(&object_id_)) + sizeof(target_id_));
}

C_Rampage_BasicAttackCheck::~C_Rampage_BasicAttackCheck() {
  // @@protoc_insertion_point(destructor:rampage.C_Rampage_BasicAttackCheck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void C_Rampage_BasicAttackCheck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void C_Rampage_BasicAttackCheck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void C_Rampage_BasicAttackCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:rampage.C_Rampage_BasicAttackCheck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_id_) -
      reinterpret_cast<char*>(&object_id_)) + sizeof(target_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C_Rampage_BasicAttackCheck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 target_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          target_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* C_Rampage_BasicAttackCheck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rampage.C_Rampage_BasicAttackCheck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_object_id(), target);
  }

  // uint64 target_id = 2;
  if (this->_internal_target_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_target_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rampage.C_Rampage_BasicAttackCheck)
  return target;
}

size_t C_Rampage_BasicAttackCheck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rampage.C_Rampage_BasicAttackCheck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_object_id());
  }

  // uint64 target_id = 2;
  if (this->_internal_target_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_target_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData C_Rampage_BasicAttackCheck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    C_Rampage_BasicAttackCheck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*C_Rampage_BasicAttackCheck::GetClassData() const { return &_class_data_; }

void C_Rampage_BasicAttackCheck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<C_Rampage_BasicAttackCheck *>(to)->MergeFrom(
      static_cast<const C_Rampage_BasicAttackCheck &>(from));
}


void C_Rampage_BasicAttackCheck::MergeFrom(const C_Rampage_BasicAttackCheck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rampage.C_Rampage_BasicAttackCheck)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
  if (from._internal_target_id() != 0) {
    _internal_set_target_id(from._internal_target_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void C_Rampage_BasicAttackCheck::CopyFrom(const C_Rampage_BasicAttackCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rampage.C_Rampage_BasicAttackCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C_Rampage_BasicAttackCheck::IsInitialized() const {
  return true;
}

void C_Rampage_BasicAttackCheck::InternalSwap(C_Rampage_BasicAttackCheck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C_Rampage_BasicAttackCheck, target_id_)
      + sizeof(C_Rampage_BasicAttackCheck::target_id_)
      - PROTOBUF_FIELD_OFFSET(C_Rampage_BasicAttackCheck, object_id_)>(
          reinterpret_cast<char*>(&object_id_),
          reinterpret_cast<char*>(&other->object_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata C_Rampage_BasicAttackCheck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Rampage_2eproto_getter, &descriptor_table_Rampage_2eproto_once,
      file_level_metadata_Rampage_2eproto[2]);
}

// ===================================================================

class S_Rampage_Roar::_Internal {
 public:
};

S_Rampage_Roar::S_Rampage_Roar(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rampage.S_Rampage_Roar)
}
S_Rampage_Roar::S_Rampage_Roar(const S_Rampage_Roar& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  object_id_ = from.object_id_;
  // @@protoc_insertion_point(copy_constructor:rampage.S_Rampage_Roar)
}

inline void S_Rampage_Roar::SharedCtor() {
object_id_ = uint64_t{0u};
}

S_Rampage_Roar::~S_Rampage_Roar() {
  // @@protoc_insertion_point(destructor:rampage.S_Rampage_Roar)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_Rampage_Roar::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_Rampage_Roar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_Rampage_Roar::Clear() {
// @@protoc_insertion_point(message_clear_start:rampage.S_Rampage_Roar)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_Rampage_Roar::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_Rampage_Roar::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rampage.S_Rampage_Roar)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_object_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rampage.S_Rampage_Roar)
  return target;
}

size_t S_Rampage_Roar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rampage.S_Rampage_Roar)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_object_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_Rampage_Roar::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S_Rampage_Roar::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_Rampage_Roar::GetClassData() const { return &_class_data_; }

void S_Rampage_Roar::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S_Rampage_Roar *>(to)->MergeFrom(
      static_cast<const S_Rampage_Roar &>(from));
}


void S_Rampage_Roar::MergeFrom(const S_Rampage_Roar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rampage.S_Rampage_Roar)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_Rampage_Roar::CopyFrom(const S_Rampage_Roar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rampage.S_Rampage_Roar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_Rampage_Roar::IsInitialized() const {
  return true;
}

void S_Rampage_Roar::InternalSwap(S_Rampage_Roar* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(object_id_, other->object_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_Rampage_Roar::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Rampage_2eproto_getter, &descriptor_table_Rampage_2eproto_once,
      file_level_metadata_Rampage_2eproto[3]);
}

// ===================================================================

class S_Rampage_EarthQuake::_Internal {
 public:
};

S_Rampage_EarthQuake::S_Rampage_EarthQuake(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rampage.S_Rampage_EarthQuake)
}
S_Rampage_EarthQuake::S_Rampage_EarthQuake(const S_Rampage_EarthQuake& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  object_id_ = from.object_id_;
  // @@protoc_insertion_point(copy_constructor:rampage.S_Rampage_EarthQuake)
}

inline void S_Rampage_EarthQuake::SharedCtor() {
object_id_ = uint64_t{0u};
}

S_Rampage_EarthQuake::~S_Rampage_EarthQuake() {
  // @@protoc_insertion_point(destructor:rampage.S_Rampage_EarthQuake)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_Rampage_EarthQuake::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_Rampage_EarthQuake::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_Rampage_EarthQuake::Clear() {
// @@protoc_insertion_point(message_clear_start:rampage.S_Rampage_EarthQuake)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_Rampage_EarthQuake::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_Rampage_EarthQuake::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rampage.S_Rampage_EarthQuake)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_object_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rampage.S_Rampage_EarthQuake)
  return target;
}

size_t S_Rampage_EarthQuake::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rampage.S_Rampage_EarthQuake)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_object_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_Rampage_EarthQuake::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S_Rampage_EarthQuake::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_Rampage_EarthQuake::GetClassData() const { return &_class_data_; }

void S_Rampage_EarthQuake::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S_Rampage_EarthQuake *>(to)->MergeFrom(
      static_cast<const S_Rampage_EarthQuake &>(from));
}


void S_Rampage_EarthQuake::MergeFrom(const S_Rampage_EarthQuake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rampage.S_Rampage_EarthQuake)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_Rampage_EarthQuake::CopyFrom(const S_Rampage_EarthQuake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rampage.S_Rampage_EarthQuake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_Rampage_EarthQuake::IsInitialized() const {
  return true;
}

void S_Rampage_EarthQuake::InternalSwap(S_Rampage_EarthQuake* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(object_id_, other->object_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_Rampage_EarthQuake::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Rampage_2eproto_getter, &descriptor_table_Rampage_2eproto_once,
      file_level_metadata_Rampage_2eproto[4]);
}

// ===================================================================

class S_Rampage_EnhanceAttack::_Internal {
 public:
};

S_Rampage_EnhanceAttack::S_Rampage_EnhanceAttack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rampage.S_Rampage_EnhanceAttack)
}
S_Rampage_EnhanceAttack::S_Rampage_EnhanceAttack(const S_Rampage_EnhanceAttack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  object_id_ = from.object_id_;
  // @@protoc_insertion_point(copy_constructor:rampage.S_Rampage_EnhanceAttack)
}

inline void S_Rampage_EnhanceAttack::SharedCtor() {
object_id_ = uint64_t{0u};
}

S_Rampage_EnhanceAttack::~S_Rampage_EnhanceAttack() {
  // @@protoc_insertion_point(destructor:rampage.S_Rampage_EnhanceAttack)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_Rampage_EnhanceAttack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_Rampage_EnhanceAttack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_Rampage_EnhanceAttack::Clear() {
// @@protoc_insertion_point(message_clear_start:rampage.S_Rampage_EnhanceAttack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_Rampage_EnhanceAttack::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_Rampage_EnhanceAttack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rampage.S_Rampage_EnhanceAttack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_object_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rampage.S_Rampage_EnhanceAttack)
  return target;
}

size_t S_Rampage_EnhanceAttack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rampage.S_Rampage_EnhanceAttack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_object_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_Rampage_EnhanceAttack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S_Rampage_EnhanceAttack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_Rampage_EnhanceAttack::GetClassData() const { return &_class_data_; }

void S_Rampage_EnhanceAttack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S_Rampage_EnhanceAttack *>(to)->MergeFrom(
      static_cast<const S_Rampage_EnhanceAttack &>(from));
}


void S_Rampage_EnhanceAttack::MergeFrom(const S_Rampage_EnhanceAttack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rampage.S_Rampage_EnhanceAttack)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_Rampage_EnhanceAttack::CopyFrom(const S_Rampage_EnhanceAttack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rampage.S_Rampage_EnhanceAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_Rampage_EnhanceAttack::IsInitialized() const {
  return true;
}

void S_Rampage_EnhanceAttack::InternalSwap(S_Rampage_EnhanceAttack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(object_id_, other->object_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_Rampage_EnhanceAttack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Rampage_2eproto_getter, &descriptor_table_Rampage_2eproto_once,
      file_level_metadata_Rampage_2eproto[5]);
}

// ===================================================================

class S_Rampage_ThrowAttack::_Internal {
 public:
};

S_Rampage_ThrowAttack::S_Rampage_ThrowAttack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:rampage.S_Rampage_ThrowAttack)
}
S_Rampage_ThrowAttack::S_Rampage_ThrowAttack(const S_Rampage_ThrowAttack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  object_id_ = from.object_id_;
  // @@protoc_insertion_point(copy_constructor:rampage.S_Rampage_ThrowAttack)
}

inline void S_Rampage_ThrowAttack::SharedCtor() {
object_id_ = uint64_t{0u};
}

S_Rampage_ThrowAttack::~S_Rampage_ThrowAttack() {
  // @@protoc_insertion_point(destructor:rampage.S_Rampage_ThrowAttack)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void S_Rampage_ThrowAttack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void S_Rampage_ThrowAttack::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void S_Rampage_ThrowAttack::Clear() {
// @@protoc_insertion_point(message_clear_start:rampage.S_Rampage_ThrowAttack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* S_Rampage_ThrowAttack::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* S_Rampage_ThrowAttack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rampage.S_Rampage_ThrowAttack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_object_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rampage.S_Rampage_ThrowAttack)
  return target;
}

size_t S_Rampage_ThrowAttack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rampage.S_Rampage_ThrowAttack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 object_id = 1;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_object_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData S_Rampage_ThrowAttack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    S_Rampage_ThrowAttack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*S_Rampage_ThrowAttack::GetClassData() const { return &_class_data_; }

void S_Rampage_ThrowAttack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<S_Rampage_ThrowAttack *>(to)->MergeFrom(
      static_cast<const S_Rampage_ThrowAttack &>(from));
}


void S_Rampage_ThrowAttack::MergeFrom(const S_Rampage_ThrowAttack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rampage.S_Rampage_ThrowAttack)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_object_id() != 0) {
    _internal_set_object_id(from._internal_object_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void S_Rampage_ThrowAttack::CopyFrom(const S_Rampage_ThrowAttack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rampage.S_Rampage_ThrowAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S_Rampage_ThrowAttack::IsInitialized() const {
  return true;
}

void S_Rampage_ThrowAttack::InternalSwap(S_Rampage_ThrowAttack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(object_id_, other->object_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata S_Rampage_ThrowAttack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Rampage_2eproto_getter, &descriptor_table_Rampage_2eproto_once,
      file_level_metadata_Rampage_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace rampage
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::rampage::S_Rampage_Spawn*
Arena::CreateMaybeMessage< ::rampage::S_Rampage_Spawn >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rampage::S_Rampage_Spawn >(arena);
}
template<> PROTOBUF_NOINLINE ::rampage::S_Rampage_BasicAttack*
Arena::CreateMaybeMessage< ::rampage::S_Rampage_BasicAttack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rampage::S_Rampage_BasicAttack >(arena);
}
template<> PROTOBUF_NOINLINE ::rampage::C_Rampage_BasicAttackCheck*
Arena::CreateMaybeMessage< ::rampage::C_Rampage_BasicAttackCheck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rampage::C_Rampage_BasicAttackCheck >(arena);
}
template<> PROTOBUF_NOINLINE ::rampage::S_Rampage_Roar*
Arena::CreateMaybeMessage< ::rampage::S_Rampage_Roar >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rampage::S_Rampage_Roar >(arena);
}
template<> PROTOBUF_NOINLINE ::rampage::S_Rampage_EarthQuake*
Arena::CreateMaybeMessage< ::rampage::S_Rampage_EarthQuake >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rampage::S_Rampage_EarthQuake >(arena);
}
template<> PROTOBUF_NOINLINE ::rampage::S_Rampage_EnhanceAttack*
Arena::CreateMaybeMessage< ::rampage::S_Rampage_EnhanceAttack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rampage::S_Rampage_EnhanceAttack >(arena);
}
template<> PROTOBUF_NOINLINE ::rampage::S_Rampage_ThrowAttack*
Arena::CreateMaybeMessage< ::rampage::S_Rampage_ThrowAttack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::rampage::S_Rampage_ThrowAttack >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
